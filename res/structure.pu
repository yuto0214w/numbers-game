@startuml name

!pragma teoz true

' !theme minty
' skinparam DefaultFontColor #000
' skinparam SequenceDividerFontColor #fff

skinparam Style strictuml
skinparam TabSize 2

actor "Client 1" as A
participant Server
actor "Client 2" as B

A -[#red]> Server: GET /room/new

== セッションを作成 ==

Server -> A: /room/<id>にリダイレクト
A -> Server: GET /room/<id>
Server -> A: 静的にHTMLを返す
A -> Server: GET /room/<id>/room_data
Server -> A: (HTTP)\n{\n\t"room_id": "<id>",\n\t"board_size": 8,\n\t"player1_registered": false,\n\t"player2_registered": false\n}
A -> Server: GET /room/<id>/create_player

== プレイヤー1を作成 ==

Server -> A: (HTTP)\n{\n\t"success": true,\n\t"user_id": "<id>"\n}
A -> Server: GET /ws
A <-[#blue]> Server: 接続を確立
activate Server
A -> Server: (WS)\n{\n\t"room_id": "<id>",\n\t"user_id": "<id>"\n}
note right of A: オーバーレイを表示する
A -[#red]> B:URLを伝える
B -[#red]> Server: GET /room/<id>
Server -> B: 静的にHTMLを返す
B -> Server: GET /room/<id>/room_data
Server -> B: (HTTP)\n{\n\t"room_id": "<id>",\n\t"board_size": 8,\n\t"player1_registered": true,\n\t"player2_registered": false\n}
B -> Server: GET /room/<id>/create_player

== プレイヤー2を作成 ==

Server -> B: (HTTP)\n{\n\t"success": true,\n\t"user_id": "<id>"\n}
B -> Server: GET /ws
B <-[#blue]> Server: 接続を確立
activate Server
B -> Server: (WS)\n{\n\t"room_id": "<id>",\n\t"user_id": "<id>"\n}
Server -> A: (WS)\n{\n\t"type": "Player2Join"\n}
note right of A: オーバーレイを解除する

== ゲーム開始 ==

A -> Server: (WS)\n{\n\t"type": "SelectPiece",\n\t"position": [1,0]\n}
Server -> A: (WS)\n{\n\t"type": "YourAction",\n\t"success": true,\n\t"origin": {\n\t\t"type": "SelectPiece",\n\t\t"position": [1,0]\n\t}\n}
& Server -> B: (WS)\n{\n\t"type": "OpponentAction",\n\t"origin": {\n\t\t"type": "SelectPiece",\n\t\t"position": [1,0]\n\t}\n}

@enduml
